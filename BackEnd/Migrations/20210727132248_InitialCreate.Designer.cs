// <auto-generated />
using System;
using BackEnd;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210727132248_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BackEnd.Models.ProductAttributes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ProductsModelproductId")
                        .HasColumnType("int");

                    b.Property<string>("attribute")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.HasIndex("ProductsModelproductId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("BackEnd.Models.ProductsModel", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("productCategory")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("productHasVariants")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("productName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("productPrice")
                        .HasColumnType("int");

                    b.Property<int>("productUnits")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.ToTable("ProductsModel");
                });

            modelBuilder.Entity("BackEnd.Models.ProductsVariantsModel", b =>
                {
                    b.Property<int>("productVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ProductVariantColor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ProductVariantPrice")
                        .HasColumnType("int");

                    b.Property<int>("ProductVariantUnits")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsModelproductId")
                        .HasColumnType("int");

                    b.HasKey("productVariantId");

                    b.HasIndex("ProductsModelproductId");

                    b.ToTable("ProductsVariantsModel");
                });

            modelBuilder.Entity("BackEnd.Models.ProductAttributes", b =>
                {
                    b.HasOne("BackEnd.Models.ProductsModel", null)
                        .WithMany("productAttributes")
                        .HasForeignKey("ProductsModelproductId");
                });

            modelBuilder.Entity("BackEnd.Models.ProductsVariantsModel", b =>
                {
                    b.HasOne("BackEnd.Models.ProductsModel", null)
                        .WithMany("productsVariants")
                        .HasForeignKey("ProductsModelproductId");
                });
#pragma warning restore 612, 618
        }
    }
}
